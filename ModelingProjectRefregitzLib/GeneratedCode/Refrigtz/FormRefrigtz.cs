//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Refrigtz
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;
	using System.Windows.Forms;

	public class FormRefrigtz : Form
	{
		public virtual object accessDraw
		{
			get;
			set;
		}

		private object components;

		public object Table;

		private object AliceSection;

		private object AllDrawLoad;

		private object AllOperate;

		public static object ArrangmentsChanged;

		public static object Blitz;

		private object BobSection;

		private object BobWithStockfishFinished;

		private object Bridge;

		public object BrownTimer;

		private object BrownWiner;

		private object ChessTable;

		private object Clicked;

		private static object ColP;

		private static object ColS;

		private object ColumnClick;

		private object ColumnClickP;

		private object ColumnRealeased;

		private object ColumnRealeasedP;

		private static object CurrentKind;

		private object Draw;

		private object Elefant;

		public static object EndOfGame;

		public static object ErrorTrueMonitorFalse;

		public static object GameStarted;

		public object GrayTimer;

		private object GrayWinner;

		private static object Hideag;

		private object Hourse;

		private object King;

		public static object LastColumn;

		public static object LastRow;

		private static object LoadAG;

		public static object LoadedTable;

		public static object MaxAStarGreedyHuristicProgress;

		public static object MaxCurrentMovmentsNumber;

		private object Maximize;

		private object Minister;

		public object MouseClicked;

		public static object MovmentsNumber;

		private static object NewTable;

		public static object OrderPlate;

		private static object Paused;

		public static object Person;

		private object PreviousTime;

		public static object ProfesionalWithComputer;

		private object RefregitzisCurrent;

		public static object Root;

		private object RowClick;

		private object RowClickP;

		private static object RowP;

		private object RowRealesed;

		private object RowRealesedP;

		private static object RowS;

		public object Sec;

		private object SettingPRFALSE;

		private object Soldier;

		public static object StateCC;

		public static object StateCP;

		public static object StateGe;

		private object Stockfish;

		private object THIs;

		private object TTimerSet;

		private object TimerImage;

		private object TimerImage1;

		public object TimerText;

		public object TimersSet;

		private static object UpdateConfigurationTableVal;

		private static object _1;

		private static object _2;

		private static object _3;

		private static object _4;

		private object aboutToolStripMenuItem;

		private object aboutToolStripMenuItem1;

		private object bookConn;

		private object buttonCalculateRootGray;

		private object buttonChangeArrangment;

		private object buttonNext;

		private object buttonPauseStart;

		private object buttonPrevious;

		private object buttonStop;

		private object checkBoxAStarGreadyFirstSearch;

		private object checkBoxAStarGreedyHuristic;

		private object checkBoxAStarGreedyMovement;

		private object checkBoxBestMovments;

		private object checkBoxDynamicProgrammingAStarGreedyt;

		private object checkBoxIgnoreSelf;

		private object checkBoxOnlySelf;

		private object checkBoxPredictHuristci;

		private object checkBoxUseDoubleTime;

		private object checkBoxUsePenaltyRegradMechnisam;

		private object clearToolStripMenuItem;

		private object comboBoxAchmaz;

		private object comboBoxAttack;

		private object comboBoxHitting;

		public object comboBoxMaxTree;

		private object comboBoxMovments;

		private object comboBoxReducedAttacked;

		private object comboBoxSupport;

		private object computerWithComputerToolStripMenuItem;

		private object computerWithComputerToolStripMenuItem1;

		private object continueAGameToolStripMenuItem;

		private object e;

		private object easestToolStripMenuItem;

		private object errorOpenToolStripMenuItem;

		private object exit;

		private object exitToolStripMenuItem;

		private object folderBrowserDialogBackup;

		private object g;

		private object g1;

		private object g2;

		private object groupBoxGroupOfPowerity;

		private object hardestToolStripMenuItem;

		private object helpProviderChessRefregitz2016;

		private object labelAchmaz;

		private object labelAttack;

		private object labelHitting;

		private object labelMaxTree;

		private object labelMovments;

		private object labelReducedAttacked;

		private object labelSupport;

		private object labelTimesRemaining;

		private object medumToolStripMenuItem;

		private object menuStripChessRefrigitz;

		private object monitorOpenToolStripMenuItem;

		private object oleDbCmd;

		private object oleDbCmdUser;

		private object opneToolStripMenuItem;

		private object pictureBoxRefrigtz;

		private object pictureBoxTimerBrown;

		private object pictureBoxTimerGray;

		public object progressBarVerify;

		private object radioButtonBigFittingImages;

		private object radioButtonOriginalImages;

		private object radioButtonSmallFittingImages;

		private object repairToolStripMenuItem;

		private object sender;

		private object t1;

		private object t2;

		private object t3;

		private object t4;

		private object tM;

		private object textBoxStatistic;

		public object textBoxText;

		private object toolStripMenuItem1;

		private object toolStripMenuItem10;

		private object toolStripMenuItem11;

		private object toolStripMenuItem2;

		private object toolStripMenuItem3;

		private object toolStripMenuItem4;

		private object toolStripMenuItem5;

		private object toolStripMenuItem6;

		private object toolStripMenuItem7;

		private object toolStripMenuItem8;

		private object toolStripMenuItem9;

		private object toolStripMenuItemNewGame;

		private object toolStripMenuItemRandomGeneticGames;

		private object verifyToolStripMenuItem;

		private void InitializeComponent()
		{
			throw new System.NotImplementedException();
		}

		protected virtual void Dispose()
		{
			throw new System.NotImplementedException();
		}

		private static void Log()
		{
			throw new System.NotImplementedException();
		}

		public FormRefrigtz(bool AllDra)
		{
		}

		private void Form1_Load()
		{
			throw new System.NotImplementedException();
		}

		private void FormRefrigtz_Leave()
		{
			throw new System.NotImplementedException();
		}

		private void FormRefrigtz_MaximumSizeChanged()
		{
			throw new System.NotImplementedException();
		}

		private void InsertTableAtDataBase()
		{
			throw new System.NotImplementedException();
		}

		private void ReadTable()
		{
			throw new System.NotImplementedException();
		}

		public virtual void SetBoxStatistic()
		{
			throw new System.NotImplementedException();
		}

		public virtual void SetBoxText(string state)
		{
			throw new System.NotImplementedException();
		}

		private void SetlableRefregitzMaxValue()
		{
			throw new System.NotImplementedException();
		}

		private void SetprogressBarRefregitzMaxValue()
		{
			throw new System.NotImplementedException();
		}

		private void SetprogressBarRefregitzValue()
		{
			throw new System.NotImplementedException();
		}

		private void TableZero()
		{
			throw new System.NotImplementedException();
		}

		private void UpdateTable()
		{
			throw new System.NotImplementedException();
		}

		private void VerifyTable()
		{
			throw new System.NotImplementedException();
		}

		private void VeryFye()
		{
			throw new System.NotImplementedException();
		}

		private void aboutToolStripMenuItem1_Click()
		{
			throw new System.NotImplementedException();
		}

		private void button1_Click()
		{
			throw new System.NotImplementedException();
		}

		private void buttonChangeArrangment_Click()
		{
			throw new System.NotImplementedException();
		}

		private void buttonNext_Click()
		{
			throw new System.NotImplementedException();
		}

		private void buttonPause_Click()
		{
			throw new System.NotImplementedException();
		}

		private void buttonPrevious_Click()
		{
			throw new System.NotImplementedException();
		}

		private void buttonStop_Click()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxAStarGreadyFirstSearch_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxAStarGreedyHuristic_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxAStarGreedyMovement_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxAStarGreedyMovement_Enter()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxBestMovments_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxDynamicProgrammingAStarGreedyt_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxIgnoreSelf_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxOnlySelf_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxPredictHuristci_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxUseDoubleTime_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void checkBoxUsePenaltyRegradMechnisam_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void clearToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxAchmaz_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxAttack_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxHitting_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxMaxTree_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxMovments_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxReducedAttacked_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void comboBoxSupport_SelectedIndexChanged()
		{
			throw new System.NotImplementedException();
		}

		private void computerWithComputerToolStripMenuItem1_Click()
		{
			throw new System.NotImplementedException();
		}

		private void computerWithComputerToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void continueAGameToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void easestToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void errorOpenToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void exitToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void hardestToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void medumToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void menuStripChessRefrigitz_Leave()
		{
			throw new System.NotImplementedException();
		}

		private void monitorOpenToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_Click()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_MouseClick()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_MouseDoubleClick()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_MouseLeave()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_MouseMove()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxRefrigtz_Paint()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxTimerBrown_Paint()
		{
			throw new System.NotImplementedException();
		}

		private void pictureBoxTimerGray_Paint()
		{
			throw new System.NotImplementedException();
		}

		private void progressBarVerify_Click()
		{
			throw new System.NotImplementedException();
		}

		private void progressBarVerify_CursorChanged()
		{
			throw new System.NotImplementedException();
		}

		private void progressBarVerify_Validated()
		{
			throw new System.NotImplementedException();
		}

		private void radioButton1_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void radioButtonBigFittingImages_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void radioButtonSmallFittingImages_CheckedChanged()
		{
			throw new System.NotImplementedException();
		}

		private void repairToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void startGameToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem10_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem11_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem1_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem2_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem3_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem3_Click_1()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem6_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem7_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem7_Click_1()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem8_Click()
		{
			throw new System.NotImplementedException();
		}

		private void toolStripMenuItem9_Click()
		{
			throw new System.NotImplementedException();
		}

		private void verifyToolStripMenuItem_Click()
		{
			throw new System.NotImplementedException();
		}

		private void AliceAction()
		{
			throw new System.NotImplementedException();
		}

		private void AliceWithPerson()
		{
			throw new System.NotImplementedException();
		}

		private void AllOperations()
		{
			throw new System.NotImplementedException();
		}

		private void BobAction()
		{
			throw new System.NotImplementedException();
		}

		private void BobWithPerson()
		{
			throw new System.NotImplementedException();
		}

		private void CreatTable()
		{
			throw new System.NotImplementedException();
		}

		private void CreateConfigurationTable()
		{
			throw new System.NotImplementedException();
		}

		private void GeneticAction()
		{
			throw new System.NotImplementedException();
		}

		private void HitRecustruct()
		{
			throw new System.NotImplementedException();
		}

		private void Movements()
		{
			throw new System.NotImplementedException();
		}

		private void ReadConfigurationTable()
		{
			throw new System.NotImplementedException();
		}

		private void ReadTableMovmentNumber()
		{
			throw new System.NotImplementedException();
		}

		public virtual void RefreshBoxStatistic()
		{
			throw new System.NotImplementedException();
		}

		public virtual void RefreshBoxText()
		{
			throw new System.NotImplementedException();
		}

		private void RunInBackGround()
		{
			throw new System.NotImplementedException();
		}

		private void RunInFront()
		{
			throw new System.NotImplementedException();
		}

		public virtual void SetCloseVisible()
		{
			throw new System.NotImplementedException();
		}

		private void SetTimer()
		{
			throw new System.NotImplementedException();
		}

		private void UpadatTimer()
		{
			throw new System.NotImplementedException();
		}

		private void UpdateConfigurationTable()
		{
			throw new System.NotImplementedException();
		}

		private void Veryfi()
		{
			throw new System.NotImplementedException();
		}

		private void Wait()
		{
			throw new System.NotImplementedException();
		}

	}
}

